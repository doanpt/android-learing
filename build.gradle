// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

ext {
    runningOnJenkins = System.getenv('JENKINS_URL') != null
    nexusReleasesRepository = getEnvOrProperty('NEXUS_RELEASES_REPOSITORY')
    nexusSnapshotsRepository = getEnvOrProperty('NEXUS_SNAPSHOTS_REPOSITORY')
    nexusUsername = getEnvOrProperty('NEXUS_USERNAME')
    nexusPassword = getEnvOrProperty('NEXUS_PASSWORD')

    buildToolsVersion = '26.0.0'

    hamcrestVersion = '1.3'
    junitVersion = '4.11'
    runnerVersion = '0.5'
    supportVersion = '25.3.1'

    supportV4 = "com.android.support:support-v4:$supportVersion"
    supportDesign = "com.android.support:design:$supportVersion"
    supportAnnotations = "com.android.support:support-annotations:$supportVersion"
    supportAppCompat = "com.android.support:appcompat-v7:$supportVersion"
    recyclerviewV7 = "com.android.support:recyclerview-v7:$supportVersion"

    // Test
    junit = "junit:junit:$junitVersion"
    testRunner = "com.android.support.test:runner:$runnerVersion"
    testRules = "com.android.support.test:rules:$runnerVersion"

    // Hamcrest
    hamcrestCore = "org.hamcrest:hamcrest-core:$hamcrestVersion"
    hamcrestLibrary = "org.hamcrest:hamcrest-library:$hamcrestVersion"
    hamcrestIntegration = "org.hamcrest:hamcrest-integration:$hamcrestVersion"

    testDep = [junit,
               hamcrestCore,
               hamcrestLibrary,
               hamcrestIntegration]

    androidTestDep = [junit,
                      testRunner,
                      testRules,
                      hamcrestCore,
                      hamcrestLibrary,
                      hamcrestIntegration]
}

allprojects {
    repositories {
        jcenter()
//        maven { url "https://raw.github.com/laenger/maven-releases/master/releases" }
//        maven { url "https://raw.github.com/laenger/maven-releases/master/snapshots" }
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def getEnvOrProperty(String name) {
    return System.getenv(name) ?: project.hasProperty(name) ? project[name] : '';
}
