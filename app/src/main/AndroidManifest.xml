<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.ddona.jetpack">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <application
        android:name=".JetpackApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Jetpack">
        <activity android:name=".ui.paging.PagingActivity">
<!--            <intent-filter>-->
<!--                <action android:name="android.intent.action.MAIN" />-->
<!--                <category android:name="android.intent.category.LAUNCHER" />-->
<!--            </intent-filter>-->
        </activity>
        <activity android:name=".ui.TestEventActivity" />
        <activity android:name=".ui.MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".ui.nav.NavScreenActivity">
            <!--            <intent-filter>-->
            <!--                <action android:name="android.intent.action.MAIN" />-->

            <!--                <category android:name="android.intent.category.LAUNCHER" />-->
            <!--            </intent-filter>-->
            <!--            <nav-graph android:value="@navigation/nav_graph" />-->
        </activity>

        <provider
            android:name="androidx.work.impl.WorkManagerInitializer"
            android:authorities="${applicationId}.workmanager-init"
            android:enabled="false"
            android:exported="false" />

        <!-- register custom provider -->
        <!--        We can use a custom content provider for custom work manager initializer but we do it in Application class , so don't need to create content provider-->
        <!--        <provider-->
        <!--            android:name=".CustomWorkManagerInitializer"-->
        <!--            android:authorities="${applicationId}.WorkManagerInit"/>-->
    </application>

</manifest>