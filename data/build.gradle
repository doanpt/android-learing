plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdk globalConfiguration.getAt("androidCompileSdkVersion")

    defaultConfig {
        minSdk globalConfiguration.getAt("androidMinSdkVersion")
        targetSdk globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")

        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'  // Some libraries have issues with this
        disable 'OldTargetApi'
        // Due to Robolectric that modifies the manifest when running tests
    }
}

dependencies {
    def dataDependencies = rootProject.ext.dataDependencies
    def testDependencies = rootProject.ext.dataTestDependencies
    compileOnly dataDependencies.javaxAnnotation
    compileOnly dataDependencies.javaxInject
    implementation project(path: ':domain')

    implementation dataDependencies.coreKtx
    implementation dataDependencies.appcompat
    implementation dataDependencies.material
    implementation dataDependencies.retrofit
    implementation dataDependencies.converterGson
    implementation dataDependencies.okhttp
    implementation dataDependencies.loggingInterceptor

    testImplementation testDependencies.junit
    androidTestImplementation testDependencies.extJunit
    androidTestImplementation testDependencies.espresso
}